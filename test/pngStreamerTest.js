// Generated by CoffeeScript 1.3.3
var PngStreamer, assert, compareFilesWithCounter, fs, individualImageFiles, spawn;

PngStreamer = require('../');

assert = require('assert');

spawn = require('child_process').spawn;

fs = require('fs');

individualImageFiles = ['1.png', '2.png', '3.png'];

compareFilesWithCounter = function(counter, fileName, file, done) {
  return function(err, data) {
    if (err) {
      throw err;
    }
    assert.equal(file.toString('hex'), data, "Unequal stuff in " + counter);
    if (counter === 2) {
      return done();
    }
  };
};

describe('pngStreamer', function() {
  it('correctly splits out several png files from a stream', function(done) {
    var pngStreamer, testFileStream, timesCalled;
    timesCalled = 0;
    testFileStream = spawn('cat', ['test/testPngWith3Images.png']);
    pngStreamer = new PngStreamer(testFileStream, function(err, data) {
      var fileName;
      if (err) {
        throw err;
      }
      fileName = "test/" + individualImageFiles[timesCalled++];
      return fs.readFile(fileName, 'hex', compareFilesWithCounter(timesCalled, fileName, data, done));
    });
    return console.log("pngStreamer is ", pngStreamer);
  });
  return it('handles improperly formatted png files correctly', function() {});
});

